<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:gui="http://java.sun.com/jsf/facelets"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:jsp="http://java.sun.com/JSP/Page"
      xmlns:ice="http://www.icesoft.com/icefaces/component">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
</head>
<body>
  <gui:composition template="/template.xhtml">
    <gui:param name="pageTitle" value="#{bundlePageInfo.addFilesTitle} - #{VDCRequest.dataversePageTitle}"/>
    <gui:define name="body">
      <script type="text/javascript">
          // <![CDATA[
          // functions to work with category selection note a few assumptions that these functions have:
          // the id of the dropdown (including parent nodes); the partial id of the checkboxes;
          // and that the checkbox is two elements before the text field (there is empty text
          // in between, created by the div)
          function updateCategory( checkbox ) {
              if (checkbox.checked) {
                  dropdown = document.getElementById("form1:dummy_datatable:0:fileDataTable:catDropdown");
                  textField = (document.getElementById(checkbox.id)).nextSibling;
                  textField.value= dropdown.value;
                  textField.focus();
                 // document.forms['form1'].elements[textFiled.id].select();
                  //
                  //alert("text value "+ textField.value);
              }
          }
          function deselectCategory( textField ) {
              checkbox = document.getElementById(textField.id).previousSibling;
              checkbox.checked = false;
          }
          function updateAllCheckedCategories( dropdown ) {
              checkboxes=document.getElementsByTagName("input");
              for(i=0; i < checkboxes.length; i++) {
                  if (checkboxes[i].id.indexOf("catCheckbox") != -1 && checkboxes[i].checked == true) {
                      textField = checkboxes[i].nextSibling;
                      textField.value = dropdown.value;
                      textField.focus();
                  }
              }
          }
          function disableSave() {
              document.getElementById("form1:saveButton").disabled = true;
          }
          // ]]>
      </script>
      <div class="dvn_section">
        <div jsfc="ice:panelGroup" styleClass="dvnMsgBlockRound dvnInformationMessage">
          <div class="dvnMsgBlockContainer">
            <ice:outputText value="#{bundlePageInfo.addFilesHelp}" escape="false"/>
          </div>
        </div>
        <div class="dvn_sectionTitle">
          <ice:outputText value="#{bundlePageInfo.addFilesTitle}"/>
        </div>
        <div class="dvn_sectionBox">
          <div class="dvn_margin12">
            <ice:form id="form1">
              <ice:inputHidden id="vdcId" value="#{VDCRequest.currentVDCId}"/>
              <ice:inputHidden id="studyId" value="#{AddFilesPage.study.id}"/>
              <input type="hidden" name="pageName" value="AddFilesPage"/>
              <ice:panelGroup id ="inputFile" style="dvnAddFilesInputBlock">
                <ice:inputFile id="inputFileComponent"
                               submitOnUpload="postUpload"
                               actionListener="#{AddFilesPage.uploadFile}"
                               binding="#{AddFilesPage.inputFile}"
                               styleClass="dvnAddFilesInput">
                  <!-- <ice:commandButton binding="#{AddFilesPage.inputFile}"/> -->
                  <ice:outputStyle rel="stylesheet" type="text/css" href="/resources/css/stylesheet.css"/>
                </ice:inputFile>
                <br/>
                <ice:message layout="table" globalOnly="false" for="inputFileComponent"
                              showDetail="true" showSummary="false" styleClass="errorMessage"/>
              </ice:panelGroup>
              <!--
              This is a very basic table comprising four columns. Each
              row represents an inventory item. Each column represents a
              inventory item property. commandSortHeader components have been
              added ot the table headers.

              The sortAscending and sortColumn attributes are set when a command
              sortColumnName header is activated.  The sortColumn and sortAscending
              data can then be sortColumnName by a sortColumnName algorithm if a
              change is detected.
              -->
              <!-- this is a dummy datatable wrapper used to force data retention on validation error-->
              <ice:dataTable cellpadding="0" cellspacing="0" width="100%" id="dummy_datatable"
                             value="dummy_datatable" styleClass="dvnAddFilesOuterTable">
                <ice:column>
                  <ice:dataTable cellpadding="0" cellspacing="0" width="100%" rendered="true"
                                 id="fileDataTable" styleClass="dvnAddFilesTable"
                                 columnWidths="20%,20%,40%,10%,10%"
                                 value="#{AddFilesPage.fileList}" binding="#{AddFilesPage.filesDataTable}" var="file">
                    <ice:column id="catCol">
                      <ice:panelGroup block="true" id="panel1" style="white-space: nowrap;">
                        <!-- note that the Javascript functions currently depends on the placement and ids of these fields (and the dropdown box;
                                          changing them may require corresponding changes in the Javascript  -->
                        <ice:selectBooleanCheckbox id="catCheckbox" onclick="updateCategory(this);"/>
                        <ice:inputText id="catTextField" size="28" value="#{file.fileCategoryName}" partialSubmit="false"
                                       valueChangeListener="#{AddFilesPage.addCategory}"
                                       onfocus="deselectCategory(this);"
                                       onblur="iceSubmitPartial(form,this,event);"/>
                      </ice:panelGroup>
                      <f:facet name="header" id="f1">
                        <ice:panelGroup id="catColPanelGroup" styleClass="dvnAddFilesTableCategory">
                          <ice:outputLabel id="catDesc" value="Category"/>
                          <ice:selectOneMenu id="catDropdown" onchange="updateAllCheckedCategories(this);">
                            <f:selectItems value="#{AddFilesPage.fileCategories}"/>
                          </ice:selectOneMenu>
                        </ice:panelGroup>
                      </f:facet>
                    </ice:column>
                    <ice:column>
                      <f:facet name="header">
                        <ice:outputLabel value="File Name"/>
                      </f:facet>
                      <ice:inputText id="input_filename" size="24" value="#{file.studyFile.fileName}" required="true"
                                     requiredMessage="This field is required."
                                     validator="#{AddFilesPage.validateFileName}" partialSubmit="true"
                                    />
                                     <!-- "this.form.submit();"/>
                      <f:param name="fileName" value="#{file.studyFile.fileName}"/> -->
                      <ice:message for="input_filename" styleClass="errorMessage"/>
                    </ice:column>
                    <ice:column>
                      <f:facet name="header">
                        <ice:outputLabel value="Description"/>
                      </f:facet>
                      <ice:inputTextarea id="description_filename" styleClass="dvnTextareaAuto" cols="38" rows="2"
                                         value="#{file.studyFile.description}" partialSubmit="false"
                                         onchange="iceSubmitPartial(form,this,event);"/>
                    </ice:column>
                    <ice:column>
                      <f:facet name="header">
                        <ice:outputLabel value="Size (bytes)"/>
                      </f:facet>
                      <ice:outputText size="25" value="#{file.sizeFormatted}"/>
                    </ice:column>
                    <ice:column>
                      <f:facet name="header">
                        <ice:outputLabel value="Remove"/>
                      </f:facet>
                      <ice:commandLink
                        value="Remove" id="removeFile"
                        actionListener="#{AddFilesPage.removeUploadedFile}">
                        <f:param name="fileName" value="#{file.studyFile.fileName}"/>
                      </ice:commandLink>
                    </ice:column>
                  </ice:dataTable>
                </ice:column>
              </ice:dataTable>
              <ice:panelGroup block="true" styleClass="dvnFormPadding" rendered="#{AddFilesPage.emailRequested}">
                <ice:outputText styleClass="vdcTextStandout" value="NOTE:"/>
                <ice:outputText id="email" escape="false" styleClass="warnMessage"
                                value="SPSS and STATA files will be converted to a  tab delimited  format and are subsettable. You will still be able to download the original file, as well as other formats. GraphML files will also be subsettable using network data analysis.  Subsettable files might take a long time to upload and be processed. We will send you an e-mail notification when the upload process starts and when it completes."/>
                <br/>
                <ice:outputText value="E-Mail Address:"/>
                <ice:inputText id="textField3" size="50" value="#{AddFilesPage.ingestEmail}">
                  <f:validator validatorId="EmailValidator"/>
                </ice:inputText>
                <br/>
                <ice:outputText id="emailmany" escape="false" styleClass="warnMessage"
                                value="Separate multiple e-mail addresses with a comma (and no spaces)."/>
                <ice:message for="textField3" id="validatorMessage" styleClass="errorMessage"/>
              </ice:panelGroup>
              <div class="dvnFormPadding dvnFormMargin">
                <ice:commandButton id="saveButton" value="Save" action="#{AddFilesPage.save_action}"/>
                <ice:commandButton id="cancelButton" value="Cancel" immediate="true" action="#{AddFilesPage.cancel_action}"/>
              </div>
            </ice:form>
          </div>
        </div>
      </div>
    </gui:define>
  </gui:composition>
</body>
</html>
