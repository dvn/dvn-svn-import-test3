/**
 * 
 */
package edu.harvard.hmdc.vdcnet.dsb.impl;



import java.util.*;
import java.util.logging.*;
import java.io.*;
import org.apache.commons.lang.*;
import org.apache.commons.lang.text.StrSubstitutor;
import static java.lang.System.*;
/**
 * @author asone
 *
 */
public class DvnReplicationREADMEFileWriter {

    // instance fields
    private static Logger dbgLog = Logger.getLogger(DvnReplicationREADMEFileWriter.class.getPackage().getName());
    // value map
    public Map<String, String> valueMap = new LinkedHashMap<String, String>();

    public static String headerTemplate = "README for the Version ${dataverse_version_no} of " +
         "the Dataverse Network application.\n";
    
    public String generateHeaderBlock(){
        StrSubstitutor sub = new StrSubstitutor(valueMap);
        return sub.replace(headerTemplate);
    }
    
    public static String pt1Template = 
    "_How to Replicate Analysis_\n\n "+
    "1. If you do not already have R (version ${R_min_verion_no} or later) installed on your \n" +
    "   computer, install it from:\n\n" +
    "   http://cran.r-project.org\n\n"+
    "   Note: Some analyses require additional modules, the replication file \n" +
    "   will attempt to install any that are missing, as long as your system is \n" +
    "   connected to the Internet.\n\n" +
    "   Note: Because some graphics are generated by dev2bitmap() [Graphics \n" +
    "   Device for Bitmap Files via GhostScript], your computer may need \n" +
    "   ghostscript (see the Details section of dev2bitmap in the R Reference \n" +
    "   manual). \n";
    
    public String generatePt1Block(){
        StrSubstitutor sub = new StrSubstitutor(valueMap);
        return sub.replace(pt1Template);
    }
    
    public static String pt2Template = 
        "2. Open the accompanying " +
        "'zipFile.xxxxxx.xxxxxx.zip' file, and copy the files \n" +
        "    in it to a new location (for example, your desktop).\n\n" +
        "    Note: This normally contains four files:\n\n"+
        "    1. citation file            citationFile.xxxxxx.ccccc.txt\n"+
        "    2. RData file               dvnDataFramefile.xxxxxx.aaaaa.tab\n"+
        "    3. R-command file           RcommandFile.xxxxxx.ddddd.R\n"+
        "    4. R-function file          dvn_helper.R\n\n"+
        "    where xxxxxx and other five-character-long strings are an arbitrary\n"+ 
        "    identification numbers.\n";

    public String generatePt2Block(){
        StrSubstitutor sub = new StrSubstitutor(valueMap);
        return sub.replace(pt2Template);
    }
    
    public static String pt3Template = "3. Run R\n\n";
    
    public String generatePt3Block(){
        StrSubstitutor sub = new StrSubstitutor(valueMap);
        return sub.replace(pt3Template);
    }
    
    public static String pt4Template = 
        "4. From the R menus, change the working" +
        " directory to the location of the\n" +
        "    replication files (for example, your desktop)\n\n"+
        "    Note: In windows, from R, use  File -> 'Change dir ...'\n"+
        "          in Mac OS X, use Misc => 'Change Working Directory ...'\n\n";
    
    public String generatePt4Block(){
        StrSubstitutor sub = new StrSubstitutor(valueMap);
        return sub.replace(pt4Template);
    }
    public static String pt5Template = "5. Run the R-command file\n"+
        "    From R, use File->'Source File', and select the Rcommandfile.xxxxxx.ddddd.R\n\n";
    
    public String generatePt5Block(){
        StrSubstitutor sub = new StrSubstitutor(valueMap);
        return sub.replace(pt5Template);
    }
    public static String pt6Template = 
        "6. View results -- these will open automatically in your browser.\n\n";
    
    public String generatePt6Block(){
        StrSubstitutor sub = new StrSubstitutor(valueMap);
        return sub.replace(pt6Template);
    }
    public static String supportTemplate = 
        "_To Get Support_\n\n"+
        "You may want to consult the 'Data Users Guide' of the Dataverse Network Project \n"+
        "web-page first:\n\n"+
        "    http://thedata.org/guides/users\n\n"+
        "especially, 'Subset, Analyze, and Download Data Sets'\n\n"+
        "    http://thedata.org/guides/users/use_data\n\n"+
        "If you need to contact us about results of a specific modeling request, \n" +
        "besides your questions and comments, please include the following \n" +
        "request-tracking information:\n\n"+
        "************************************************************\n"+
        "    PID=>${PID}\n"+
        "    Date=>${RexecDate}\n"+
        "    Host=>${dsbHost}\n"+
        "    Title=>${studyTitle}\n"+
        "    No=>${studyNo}\n"+
        "    URL=>${studyURL}\n"+
        "    Type=>${option}\n"+
        "************************************************************\n"+
        "\n\n"+
        "Thank your using the Dataverse Network.\n\n\nDataverse Network Project\n"+
        "dvn_support@help.hmdc.harvard.edu\n"+
        "http://thedata.org/contact\n";
    
    public String generatePtSupportBlock(){
        StrSubstitutor sub = new StrSubstitutor(valueMap);
        return sub.replace(supportTemplate);
    }
    
    
    /**
     * @param valueMap
     */
    public DvnReplicationREADMEFileWriter(Map<String, String> valueMap) {

        this.valueMap = valueMap;
    }
    
    public void writeREADMEfile(File outFile){
        OutputStream outs = null;
        try {
            outs = new BufferedOutputStream(new FileOutputStream(outFile));
            PrintWriter pw = new PrintWriter(new OutputStreamWriter(outs, "utf8"), true);
            
            pw.println(generateHeaderBlock()+"\n");
            pw.println(generatePt1Block());
            pw.println(generatePt2Block());
            pw.println(generatePt3Block());
            pw.println(generatePt4Block());
            pw.println(generatePt5Block());
            pw.println(generatePt6Block());
            pw.println(generatePtSupportBlock());

           outs.close();
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }
}
